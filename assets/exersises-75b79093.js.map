{"version":3,"file":"exersises-75b79093.js","sources":["../../src/js/exersises.js"],"sourcesContent":["import { bodyPart, equipment, musclesGroup } from './api.js';\n\nconst exerciseList = document.querySelector('.exercise-cards-list');\nconst cardList = document.querySelector('.exercise-cards-list');\nconst exerciseCards = document.querySelectorAll('.exercise-card');\nconst pageCounter = document.querySelector('.exercise-pages-counter')\nconst exerciseParts = document.querySelector('.exercise-parts')\nconst exerciseForm = document.querySelector('.exercise-form')\nconst exerciseInputButton = document.querySelector('.exercise-input-button')\nconst exerciseInput = document.querySelector('.exercise-input')\nconst exercise = document.querySelectorAll('.exercise-button')\nconst exercisePartsList = document.querySelector('.exercise-parts-list')\n\n\nlet currentPage ;\nlet searchQuery = '';\nlet searchInput = '';\nlet allResults = [];\nlet limit;\n\nlocalStorage.removeItem('searchInput');\nlocalStorage.removeItem('searchQuery');\n\nexerciseList.addEventListener('click', async (event) => {\n    event.preventDefault();\n    allResults = [];\n    currentPage = 1;\n    try {\n        const data = await musclesGroup(event);\n        const results = data.results;\n\n        allResults = [...results];\n\n\n        if (results.length === 0) {\n            throw new Error({\n                title: 'No Results',\n                message: 'No images found. Please try a different search term.',\n            });\n        }\n\n        cardList.style.display = 'none'\n        exercisePartsList.style.display = 'flex';\n        \n\n        const rating = Math.round(results.rating)\n\n        exercisePartsList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\npageCounter.addEventListener('click', async (event) => {\n    const clickedPage = event.target.textContent;\n    currentPage = clickedPage\n    console.log(currentPage);\n    limit = 8\n\n    try {\n        const localSearch = JSON.parse(localStorage.getItem('searchQuery'));\n        const searchQuery = localSearch.searchQuery\n        console.log(searchQuery);\n        const url = `https://energyflow.b.goit.study/api/exercises?muscles=${searchQuery}&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n            \n        if (response.status !== 200) {\n            throw new Error('Failed to fetch data. Please try again later.');\n            }\n\n        const resultPromise = response.json();\n        const data = await resultPromise;\n        const results = data.results\n\n        console.log(results);  \n        \n        const rating = Math.round(results.rating)\n\n        exercisePartsList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    \n});\n\n\n\nexercise.forEach((elem) => {\n    elem.addEventListener('click', (event) => {\n        event.preventDefault();\n        const targetElement = event.target.textContent\n        localStorage.removeItem('searchInput')\n        localStorage.removeItem('searchQuery')\n        if (targetElement === 'Muscles') {\n            exerciseInput.style.display = 'none';\n            exerciseInputButton.style.display = 'none';\n            exercisePartsList.style.display = 'none';\n            cardList.style.display = 'flex'\n\n        \n            \n        } else if (targetElement === 'Body parts') {\n            exercisePartsList.innerHTML = ''\n            exerciseInput.style.display = 'flex';\n            exerciseInputButton.style.display = 'flex';\n            exercisePartsList.style.display = 'flex';\n            cardList.style.display = 'none'\n            pageCounter.style.display = 'none'\n            try {\n            } catch {\n                \n            }\n        }\n    })\n})\n\nexerciseForm.addEventListener('submit', async function(event) {\n    event.preventDefault();\n    allResults = [];\n    currentPage = 1;\n\n    try {\n        const submitedValue = exerciseInput.value\n        const data = await bodyPart(submitedValue)\n        const results = data.results;\n\n        allResults = [...results];\n\n        console.log(results);\n\n        if (results.length === 0) {\n            console.log(results.length);\n            \n            \n            exercisePartsList.insertAdjacentHTML('beforeend', \"<li class='no-result-list'><p class='no-result'>Unfortunately,<span class='no-result-span'> no results</span> were found.You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>\");\n            pageCounter.style.display = \"none\"\n            return\n        }else{\n        pageCounter.style.display = 'flex'\n        const rating = Math.round(results.rating)\n\n        exercisePartsList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');}\n    } catch (error) {\n        console.error('Error:', error);\n    }\n\n});\n\npageCounter.addEventListener('click', async (event) => {\n    const clickedPage = event.target.textContent;\n    currentPage = clickedPage\n\n    limit = 8\n\n    try {\n        const localSearch = JSON.parse(localStorage.getItem('searchInput'));\n        searchInput = localSearch.searchInput\n        \n        const url = `https://energyflow.b.goit.study/api/exercises?bodypart=${searchInput}&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n            \n        if (response.status !== 200) {\n            throw new Error('Failed to fetch data. Please try again later.');\n            }\n\n        const resultPromise = response.json();\n        const data = await resultPromise;\n        const results = data.results\n        console.log(results.length);  \n\n        const rating = Math.round(results.rating)\n\n        exercisePartsList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    \n});"],"names":["exerciseList","cardList","pageCounter","exerciseForm","exerciseInputButton","exerciseInput","exercise","exercisePartsList","currentPage","searchInput","allResults","limit","event","results","musclesGroup","rating","html","result","error","searchQuery","url","response","elem","targetElement","submitedValue","bodyPart"],"mappings":"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"}