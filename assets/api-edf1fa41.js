async function l(r){let o=1;const a=8;let t="";try{t=r.target.id,localStorage.setItem("searchQuery",JSON.stringify({searchQuery:t}));const e=`https://energyflow.b.goit.study/api/exercises?muscles=${t}&page=${o}&limit=${a}`,s=await fetch(e);if(s.status!==200)throw new Error("Failed to fetch data. Please try again later.");const n=await s.json();if(n.length===0)throw new Error("No data found. Please try a different search term.");return n}catch(e){throw console.error("Error fetching data:",e),e}}async function u(r){let o=1;const a=8;let t="";try{t=encodeURIComponent(r.toLowerCase()),localStorage.setItem("searchInput",JSON.stringify({searchInput:t}));const e=`https://energyflow.b.goit.study/api/exercises?bodypart=${t}&page=${o}&limit=${a}`,s=await fetch(e);if(s.status!==200)throw new Error("Failed to fetch data. Please try again later.");const n=await s.json();if(n.length===0)throw new Error("No data found. Please try a different search term.");return n}catch(e){throw console.error("Error fetching data:",e),e}}async function g(r){let o=1;const a=8;let t="";try{t=encodeURIComponent(r.target.id),console.log(t);const e=`https://energyflow.b.goit.study/api/exercises?equipment=${t}&page=${o}&limit=${a}`,s=await fetch(e);if(s.status!==200)throw new Error("Failed to fetch data. Please try again later.");const n=await s.json();if(n.length===0)throw new Error("No data found. Please try a different search term.");return n}catch(e){throw console.error("Error fetching data:",e),e}}async function i(){try{return await(await fetch("https://energyflow.b.goit.study/api/quote")).json()}catch(r){return console.error("Error getting quote from backend",r),null}}async function f(){const r=localStorage.getItem("quote"),o=localStorage.getItem("quoteDate"),a=new Date().toDateString();if(r&&o===a)return JSON.parse(r);{const t=await i();if(t)return localStorage.setItem("quote",JSON.stringify(t)),localStorage.setItem("quoteDate",a),t}}export{u as bodyPart,g as equipment,l as musclesGroup,f as updateQuoteBlock};
//# sourceMappingURL=api-edf1fa41.js.map
