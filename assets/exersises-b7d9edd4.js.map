{"version":3,"file":"exersises-b7d9edd4.js","sources":["../../src/js/exersises.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { bodyPart, equipment, musclesGroup } from './api.js';\n\nconst exerciseList = document.querySelector('.exercise-cards-list');\nconst cardList = document.querySelector('.exercise-cards-list');\n\nconst pageCounter = document.querySelector('.exercise-pages-counter');\nconst exerciseForm = document.querySelector('.exercise-form');\n\nconst exerciseInputButton = document.querySelector('.exercise-input-button');\nconst exerciseInput = document.querySelector('.exercise-input');\n\nconst exercise = document.querySelectorAll('.exercise-button');\nconst exercisePartsList = document.querySelector('.exercise-parts-list');\n\nconst spanLog = document.querySelector('.exercise-log-span');\nconst spanTitle = document.querySelector('.exercise-title-span');\n\nconst exerciseBtn = document.querySelector('.exercise-part-button');\n\nconst popAddFavButton = document.querySelector('.pop-add-fav');\nconst exPopClose = document.querySelector('.pop-ex-close-btn');\nconst exPopUpWindow = document.querySelector('.pop-backdrop');\n\nconst ratingPopUpWindow = document.querySelector('.backdrop');\nconst ratingPopUpOpen = document.querySelector('.pop-rating-btn');\nconst ratingPopUpClose = document.querySelector('.pop-up-close-btn');\n\nconst popExerciseInfo = document.querySelector('.pop-ex-info');\nconst popModal = document.querySelector('.modal123');\nconst popBackdrop = document.querySelector('.pop-backdrop.is-open');\n\nlet currentPage;\nlet searchQuery = '';\nlet searchInput = '';\nlet allResults = [];\nlet limit;\n\nlet currentId = 0;\nlet paginationId = 0;\n\nlet inputId = 0;\nlet inputPagination = 0;\n\nlocalStorage.removeItem('searchInput');\nlocalStorage.removeItem('searchQuery');\n\nsessionStorage.removeItem('data');\n\nexerciseList.addEventListener('click', async event => {\n  event.preventDefault();\n  allResults = [];\n  currentPage = 1;\n\n  try {\n    const data = await musclesGroup(event);\n\n    const results = data.results;\n    allResults = [...results];\n    spanTitle.innerHTML = '';\n    spanTitle.textContent =\n      `${results[0].target}`.charAt(0).toUpperCase() +\n      `${results[0].target}`.slice(1);\n\n    sessionStorage.setItem('data', JSON.stringify({ results }));\n\n    currentId = 0;\n\n    for (let i = 0; i < 8; i++) {\n      currentId++;\n    }\n\n    if (results.length === 0) {\n      throw new Error({\n        title: 'No Results',\n        message: 'No images found. Please try a different search term.',\n      });\n    }\n\n    spanTitle.style.visibility = 'visible';\n    cardList.style.display = 'none';\n    exercisePartsList.style.display = 'flex';\n    spanLog.style.visibility = 'visible';\n\n    exercisePartsList.innerHTML = results.reduce(\n      (html, result, currentId) =>\n        html +\n        `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(\n                      result.rating\n                    )}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"./img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n\n                <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${currentId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"./img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${\n                  result.name.substring(0, 24) + '...'\n                }</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${\n          result.time\n        }</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `,\n      ''\n    );\n  } catch (error) {\n    console.error('Error:', error);\n  }\n});\n\npageCounter.addEventListener('click', async event => {\n  const clickedPage = event.target.textContent;\n  currentPage = clickedPage;\n  console.log(currentPage);\n  limit = 8;\n\n  try {\n    const localSearch = JSON.parse(localStorage.getItem('searchQuery'));\n    const searchQuery = localSearch.searchQuery;\n    console.log(searchQuery);\n    const url = `https://energyflow.b.goit.study/api/exercises?muscles=${searchQuery}&page=${currentPage}&limit=${limit}`;\n    const response = await fetch(url);\n\n    if (response.status !== 200) {\n      throw new Error('Failed to fetch data. Please try again later.');\n    }\n\n    const resultPromise = response.json();\n    const data = await resultPromise;\n    const results = data.results;\n\n    sessionStorage.setItem('data', JSON.stringify({ results }));\n\n    paginationId = 0;\n\n    for (let i = 0; i < 8; i++) {\n      paginationId++;\n    }\n\n    exercisePartsList.innerHTML = results.reduce(\n      (html, result, paginationId) =>\n        html +\n        `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(\n                      result.rating\n                    )}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"./img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                    <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${paginationId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"./img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${\n                  result.name.substring(0, 24) + '...'\n                }</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${\n          result.time\n        }</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `,\n      ''\n    );\n  } catch (error) {\n    console.error('Error:', error);\n  }\n});\n\nexercise.forEach(elem => {\n  elem.addEventListener('click', event => {\n    event.preventDefault();\n    const targetElement = event.target.textContent;\n    localStorage.removeItem('searchInput');\n    localStorage.removeItem('searchQuery');\n    if (targetElement === 'Muscles') {\n      exerciseInput.style.display = 'none';\n      exerciseInputButton.style.display = 'none';\n      exercisePartsList.style.display = 'none';\n      cardList.style.display = 'flex';\n      spanLog.style.visibility = 'hidden';\n      spanTitle.style.visibility = 'hidden';\n    } else if (targetElement === 'Body parts') {\n      spanLog.style.visibility = 'hidden';\n      exercisePartsList.innerHTML = '';\n      exerciseInput.style.display = 'flex';\n      exerciseInputButton.style.display = 'flex';\n      exercisePartsList.style.display = 'flex';\n      cardList.style.display = 'none';\n      pageCounter.style.display = 'none';\n      spanTitle.style.visibility = 'hidden';\n    } else {\n      exerciseInput.style.display = 'none';\n      exerciseInputButton.style.display = 'none';\n      exercisePartsList.style.display = 'none';\n      spanLog.style.visibility = 'hidden';\n      spanTitle.style.visibility = 'hidden';\n    }\n  });\n});\n\nexerciseForm.addEventListener('submit', async function (event) {\n  event.preventDefault();\n  allResults = [];\n  currentPage = 1;\n\n  try {\n    const submitedValue = exerciseInput.value;\n    const data = await bodyPart(submitedValue);\n    const results = data.results;\n\n    allResults = [...results];\n    sessionStorage.setItem('data', JSON.stringify({ results }));\n\n    if (results.length === 0) {\n      exercisePartsList.innerHTML = '';\n      console.log(results.length);\n      exercisePartsList.insertAdjacentHTML(\n        'beforeend',\n        \"<li class='no-result-list'><p class='no-result'>Unfortunately,<span class='no-result-span'> no results</span> were found.You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>\"\n      );\n      pageCounter.style.display = 'none';\n      return;\n    } else {\n      spanTitle.innerHTML = '';\n      spanTitle.textContent =\n        `${results[0].bodyPart}`.charAt(0).toUpperCase() +\n        `${results[0].bodyPart}`.slice(1);\n      spanTitle.style.visibility = 'visible';\n      spanLog.style.visibility = 'visible';\n      pageCounter.style.display = 'flex';\n\n      inputId = 0;\n\n      for (let i = 0; i < 8; i++) {\n        inputId++;\n      }\n\n      exercisePartsList.innerHTML = results.reduce(\n        (html, result, inputId) =>\n          html +\n          `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(\n                      result.rating\n                    )}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"./img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${inputId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"./img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${\n                  result.name.substring(0, 24) + '...'\n                }</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${\n            result.time\n          }</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `,\n        ''\n      );\n    }\n  } catch (error) {\n    console.error('Error:', error);\n  }\n});\n\npageCounter.addEventListener('click', async event => {\n  const clickedPage = event.target.textContent;\n  currentPage = clickedPage;\n\n  limit = 8;\n\n  try {\n    const localSearch = JSON.parse(localStorage.getItem('searchInput'));\n    searchInput = localSearch.searchInput;\n\n    const url = `https://energyflow.b.goit.study/api/exercises?bodypart=${searchInput}&page=${currentPage}&limit=${limit}`;\n    const response = await fetch(url);\n\n    if (response.status !== 200) {\n      throw new Error('Failed to fetch data. Please try again later.');\n    }\n\n    const resultPromise = response.json();\n    const data = await resultPromise;\n    const results = data.results;\n    console.log(results.length);\n\n    sessionStorage.setItem('data', JSON.stringify({ results }));\n\n    inputPagination = 0;\n\n    for (let i = 0; i < 8; i++) {\n      inputPagination++;\n    }\n\n    exercisePartsList.innerHTML = results.reduce(\n      (html, result, inputPagination) =>\n        html +\n        `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(\n                      result.rating\n                    )}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"./img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                    <a class=\"exercise-part-link\" href=\"./partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${inputPagination}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"./img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${\n                  result.name.substring(0, 24) + '...'\n                }</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${\n          result.time\n        }</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `,\n      ''\n    );\n  } catch (error) {\n    console.error('Error:', error);\n  }\n});\n\nconst modal = document.querySelector('.modal123');\nfunction popUp(data) {\n  modal.innerHTML = `\n    <div class=\"pop-backdrop is-open\">\n    <div class=\"pop-ex-modal\">\n      <button class=\"pop-ex-close-btn\">\n        <svg\n          class=\"pop-ex-close-btn-icon\"\n          width=\"24\"\n          height=\"24\"\n          aria-label=\"close icon\"\n        >\n          <use href=\"./img/icons.svg#icon-close\"></use>\n        </svg>\n      </button>\n      <div class=\"pop-exercises-img\">\n        <img\n          src=\"${data.gifUrl}\"\n          class=\"img-ex\"\n          width=\"295\"\n          height=\"258\"\n        />\n      </div>\n\n      <div class=\"pop-ex-content-container\">\n        <h2 class=\"pop-exercise-name\">${data.name}</h2>\n        <p class=\"pop-ex-current-rating\">${data.rating}</p>\n        <ul class=\"pop-ex-stars-list\">\n            <li>\n              <svg\n                class=\"pop-ex-rate-icon\"\n                width=\"18\"\n                height=\"18\"\n                aria-label=\"ratting\">\n                <use href=\"./img/icons.svg#icon-star\"></use>\n              </svg>\n            </li>\n        </ul>\n\n        <hr class=\"decorate-elem\" />\n\n        <div class=\"pop-ex-info\">\n          <div class=\"field\">\n            <span class=\"value\">Target</span>\n            <span class=\"label\">${data.target}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Body Part</span>\n            <span class=\"label\">${data.bodyPart}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Equipment</span>\n            <span class=\"label\">${data.equipment}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Popular</span>\n            <span class=\"label\">${data.popularity}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Burned Calories</span>\n            <span class=\"label\">${data.burnedCalories}</span>\n          </div>\n        </div>\n\n        <hr class=\"decorate-elem\" />\n\n        <p class=\"pop-desc-exercise\">\n          ${data.description}\n        </p>\n\n        <div class=\"pop-btns-container\">\n          <button class=\"pop-add-fav\">\n            Add to favorites<svg class=\"heart-icon\" width=\"18\" height=\"18\">\n              <use href=\"./img/icons.svg#icon-heart\"></use>\n            </svg>\n          </button>\n\n          <button class=\"pop-rating-btn\">Give a rating</button>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n}\n\nlet allfav = [];\n\nfunction dataToStorage(data) {\n  function clickHandler(event) {\n    console.log(event.target);\n\n    const localData = JSON.parse(localStorage.getItem('exercises')) || [];\n    console.log(123);\n\n    localData.push(data);\n    localStorage.setItem('exercises', JSON.stringify(localData));\n\n    allfav = [...localData];\n\n    const popAddFavButton = document.querySelector('.pop-add-fav');\n    if (popAddFavButton) {\n      popAddFavButton.removeEventListener('click', clickHandler);\n    }\n\n    const exPopClose = document.querySelector('.pop-ex-close-btn');\n\n    iziToast.success({\n      title: 'Excellent choice!',\n      message:\n        'The exercise has been successfully added to your favorites. Get ready for endless inspiration and great results!',\n      position: 'center',\n    });\n  }\n\n  \n\n  const popAddFavButton = document.querySelector('.pop-add-fav');\n  if (popAddFavButton) {\n    popAddFavButton.addEventListener('click', clickHandler);\n  } else {\n    console.error('Button not found');\n  }\n\n  function closeHandler() {\n    modal.innerHTML = '';\n  }\n\n  const exPopClose = document.querySelector('.pop-ex-close-btn');\n  if (exPopClose) {\n    exPopClose.addEventListener('click', closeHandler);\n  } else {\n    console.error('Close button not found');\n  }\n}\n\n\nexercisePartsList.addEventListener('click', async event => {\n  event.preventDefault();\n  const currentId = event.target.id;\n\n  const dataStorage = JSON.parse(sessionStorage.getItem('data'));\n\n  if (event.target.tagName != 'BUTTON') {\n    return;\n  }\n  if (currentId == currentId) {\n    const data = dataStorage.results[currentId];\n    \n    popUp(data);\n    dataToStorage(data);\n  }\n\n});\n// FAVORITES\n\nconst savedCards = JSON.parse(localStorage.getItem('exercises'));\nconsole.log(savedCards);\n\nconst favList = document.querySelector('.fav-list');\nconst favoritesContainer = document.querySelector('.favorites');\n\nfunction renderCardsFromStorage(e) {\n  const savedCards = JSON.parse(localStorage.getItem('exercises'));\n  console.log(savedCards);\n\n  favList.innerHTML = savedCards\n    .map(\n      ({ bodyPart, name, target, burnedCalories }, index) => `\n    <li class=\"exercise-parts\">\n      <div class=\"part-container\">\n        <div class=\"exercise-head-container\">\n          <span class=\"exercise-badge\">WORKOUT</span>\n          <button class=\"exercise-trash-button\">\n            <svg class=\"exercise-trash-icon\" width=\"16\" height=\"16\">\n              <use href=\"./img/icons.svg#icon-trash\"></use>\n            </svg>\n          </button>\n          <a\n            class=\"exercise-part-link\"\n            href=\"./partials/pop-up-exercise-card.html\"\n          >\n            <button class=\"exercise-part-button\">\n              Start\n              <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"./img/icons.svg#icon-arrow-right\"></use>\n              </svg>\n            </button>\n          </a>\n        </div>\n        <span class=\"exercise-part-name\">\n          <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n            <use href=\"./img/icons.svg#icon-running-man\"></use>\n          </svg>\n          <p class=\"exercise-name-text\">${name}</p> \n        </span>\n        <ul class=\"exercise-describes-list\">\n          <li class=\"exercise-describe\">\n            <p class=\"exercise-describe-category\">Burned calories:</p>\n            <p class=\"exercise-describing\">${burnedCalories} / 3 min</p>\n          </li>\n          <li class=\"exercise-describe\">\n            <p class=\"exercise-describe-category\">Body part:</p>\n            <p class=\"exercise-describing\">${bodyPart}</p>\n          </li>\n          <li class=\"exercise-describe\">\n            <p class=\"exercise-describe-category\">Target:</p>\n            <p class=\"exercise-describing\">${target}</p>\n          </li>\n        </ul>\n      </div>\n    </li>\n  `\n    )\n    .join('');\n  updateTrashButtonListeners();\n}\n\nrenderCardsFromStorage();\n\nfunction updateTrashButtonListeners() {\n  const trashBtns = document.querySelectorAll('.exercise-trash-button');\n\n  trashBtns.forEach(trashBtn => {\n    trashBtn.addEventListener('click', e => {\n      const indexToRemove = e.currentTarget.getAttribute('data-index');\n      savedCards.splice(indexToRemove, 1);\n      localStorage.setItem('exercises', JSON.stringify(savedCards));\n      renderCardsFromStorage();\n    });\n  });\n}\n\nrenderCardsFromStorage();\n\nfunction emptyContent() {\n  favList.innerHTML = `\n      <div class=\"empty-content-fav\">\n        <img\n        class=\"dumbbell-favorites-img\"\n        srcset=\"\n          ./img/favorites/dumbbell-tab-desc.png     116w,\n          ./img/favorites/dumbbell-tab-desc@2x.png  231w,\n          ./img/favorites/dumbbell-mob.png    85w,\n          ./img/favorites/dumbbell-mob@2x.png  170w\n        \"\n        src=\"./img/favorites/dumbbell-mob.png\"\n        sizes=\"(min-width: 768px) 116px, (max-width: 767px) 85px\"\n        alt=\"dumbbell icon\"\n      />\n      <p class='no-card-in-storage'>It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.</p>\n      </div>`;\n}\n// emptyContent();\n\nfunction addPaginationBtns() {\n  favoritesContainer.innerHTML = `<ul class=\"exercise-pages-counter\">\n        <li class=\"exercise-page-number\">\n            <button id=\"1\" class=\"exercise-number-button\">\n            1\n          </button>\n        </li>\n        <li class=\"exercise-page-number\">\n          <button id=\"2\" class=\"exercise-number-button\">\n            2\n          </button>\n        </li>\n        <li class=\"exercise-page-number\">\n          <button id=\"3\" class=\"exercise-number-button\">\n            3\n          </button>\n        </li>\n      </ul>`;\n}\n"],"names":["exerciseList","cardList","pageCounter","exerciseForm","exerciseInputButton","exerciseInput","exercise","exercisePartsList","spanLog","spanTitle","currentPage","searchInput","allResults","limit","currentId","paginationId","inputId","inputPagination","event","results","musclesGroup","i","html","result","error","searchQuery","url","response","elem","targetElement","submitedValue","bodyPart","modal","popUp","data","dataToStorage","clickHandler","localData","popAddFavButton","iziToast","closeHandler","exPopClose","dataStorage","savedCards","favList","renderCardsFromStorage","name","target","burnedCalories","index","updateTrashButtonListeners","trashBtn","e","indexToRemove"],"mappings":"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"}