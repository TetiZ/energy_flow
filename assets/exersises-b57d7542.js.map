{"version":3,"file":"exersises-b57d7542.js","sources":["../../src/js/exersises.js"],"sourcesContent":["import { bodyPart, equipment, musclesGroup } from './api.js';\n\nconst exerciseList = document.querySelector('.exercise-cards-list');\nconst cardList = document.querySelector('.exercise-cards-list');\n\nconst pageCounter = document.querySelector('.exercise-pages-counter')\nconst exerciseForm = document.querySelector('.exercise-form')\n\nconst exerciseInputButton = document.querySelector('.exercise-input-button')\nconst exerciseInput = document.querySelector('.exercise-input')\n\nconst exercise = document.querySelectorAll('.exercise-button')\nconst exercisePartsList = document.querySelector('.exercise-parts-list')\n\nconst spanLog = document.querySelector('.exercise-log-span')\nconst spanTitle = document.querySelector('.exercise-title-span')\n\nconst exerciseBtn = document.querySelector('.exercise-part-button')\n\nconst popAddFavButton = document.querySelector('.pop-add-fav');\nconst exPopClose = document.querySelector('.pop-ex-close-btn');\nconst exPopUpWindow = document.querySelector('.pop-backdrop');\n\nconst ratingPopUpWindow = document.querySelector('.backdrop');\nconst ratingPopUpOpen = document.querySelector('.pop-rating-btn');\nconst ratingPopUpClose = document.querySelector('.pop-up-close-btn');\n\nconst popExerciseInfo = document.querySelector('.pop-ex-info');\nconst popModal = document.querySelector('.modal123');\nconst popBackdrop = document.querySelector('.pop-backdrop.is-open')\n\nlet currentPage ;\nlet searchQuery = '';\nlet searchInput = '';\nlet allResults = [];\nlet limit;\n\nlet currentId = 0;\nlet paginationId = 0;\n\nlet inputId = 0;\nlet inputPagination = 0;\n\nlocalStorage.removeItem('searchInput');\nlocalStorage.removeItem('searchQuery');\n\nsessionStorage.removeItem('data')\n\nexerciseList.addEventListener('click', async (event) => {\n    event.preventDefault();\n    allResults = [];\n  currentPage = 1;\n\n    try {\n      const data = await musclesGroup(event);\n\n      const results = data.results;\n      allResults = [...results];\n      spanTitle.innerHTML = ''\n      spanTitle.textContent = `${results[0].target}`\n\n      sessionStorage.setItem('data', JSON.stringify({ results }))\n\n    currentId = 0;\n\n    for (let i = 0; i < 8; i++) {\n      currentId++;\n    }\n\n        if (results.length === 0) {\n            throw new Error({\n                title: 'No Results',\n                message: 'No images found. Please try a different search term.',\n            });\n      }\n\n        spanTitle.style.visibility = 'visible'\n        cardList.style.display = 'none'\n        exercisePartsList.style.display = 'flex';\n        spanLog.style.visibility = 'visible'\n\n        exercisePartsList.innerHTML = results.reduce((html, result, currentId) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(result.rating)}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"/img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n\n                <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${currentId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"/img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"/img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"/img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name.substring(0, 24) + \"...\"}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\npageCounter.addEventListener('click', async (event) => {\n    const clickedPage = event.target.textContent;\n    currentPage = clickedPage\n    console.log(currentPage);\n    limit = 8\n\ntry {\n        const localSearch = JSON.parse(localStorage.getItem('searchQuery'));\n        const searchQuery = localSearch.searchQuery\n        console.log(searchQuery);\n        const url = `https://energyflow.b.goit.study/api/exercises?muscles=${searchQuery}&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n\n        if (response.status !== 200) {\n          throw new Error('Failed to fetch data. Please try again later.');\n  }\n\n  const resultPromise = response.json();\n  const data = await resultPromise;\n  const results = data.results\n\n\n  sessionStorage.setItem('data', JSON.stringify({ results }))\n\n  paginationId = 0;\n\n  for (let i = 0; i < 8; i++) {\n    paginationId++;\n  }\n\n        exercisePartsList.innerHTML = results.reduce((html, result, paginationId) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(result.rating)}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                    <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${paginationId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"/img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name.substring(0, 24) + \"...\"}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n\n});\n\nexercise.forEach((elem) => {\n    elem.addEventListener('click', (event) => {\n        event.preventDefault();\n        const targetElement = event.target.textContent\n        localStorage.removeItem('searchInput')\n        localStorage.removeItem('searchQuery')\n        if (targetElement === 'Muscles') {\n          exerciseInput.style.display = 'none';\n          exerciseInputButton.style.display = 'none';\n          exercisePartsList.style.display = 'none';\n          cardList.style.display = 'flex'\n          spanLog.style.visibility = 'hidden'\n          spanTitle.style.visibility = 'hidden'\n\n        } else if (targetElement === 'Body parts') {\n            spanLog.style.visibility = 'hidden'\n            exercisePartsList.innerHTML = ''\n            exerciseInput.style.display = 'flex';\n          exerciseInputButton.style.display = 'flex';\n            exercisePartsList.style.display = 'flex';\n            cardList.style.display = 'none'\n          pageCounter.style.display = 'none'\n          spanTitle.style.visibility = 'hidden'\n        } else {\n          exerciseInput.style.display = 'none';\n          exerciseInputButton.style.display = 'none';\n          exercisePartsList.style.display = 'none';\n          spanLog.style.visibility = 'hidden'\n          spanTitle.style.visibility = 'hidden'\n        }\n    })\n})\n\nexerciseForm.addEventListener('submit', async function(event) {\n    event.preventDefault();\n    allResults = [];\n    currentPage = 1;\n\n    try {\n        const submitedValue = exerciseInput.value\n        const data = await bodyPart(submitedValue)\n        const results = data.results;\n\n      allResults = [...results];\n      sessionStorage.setItem('data', JSON.stringify({ results }))\n\n\n      if (results.length === 0) {\n            exercisePartsList.innerHTML=''\n            console.log(results.length);\n            exercisePartsList.insertAdjacentHTML('beforeend', \"<li class='no-result-list'><p class='no-result'>Unfortunately,<span class='no-result-span'> no results</span> were found.You may want to consider other search options to find the exercise you are looking for. Our range is wide and you have the opportunity to find more options that suit your needs.</p>\");\n            pageCounter.style.display = \"none\"\n            return\n      } else {\n        spanTitle.innerHTML = ''\n        spanTitle.textContent = `${results[0].bodyPart}`\n        spanTitle.style.visibility = 'visible'\n        spanLog.style.visibility = 'visible'\n        pageCounter.style.display = 'flex'\n\ninputId = 0;\n\nfor (let i = 0; i < 8; i++) {\n    inputId++;\n}\n\n        exercisePartsList.innerHTML = results.reduce((html, result, inputId) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(result.rating)}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${inputId}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"/img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name.substring(0, 24) + \"...\"}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');}\n    } catch (error) {\n        console.error('Error:', error);\n    }\n\n});\n\npageCounter.addEventListener('click', async (event) => {\n    const clickedPage = event.target.textContent;\n    currentPage = clickedPage\n\n    limit = 8\n\n    try {\n        const localSearch = JSON.parse(localStorage.getItem('searchInput'));\n        searchInput = localSearch.searchInput\n\n        const url = `https://energyflow.b.goit.study/api/exercises?bodypart=${searchInput}&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n\n        if (response.status !== 200) {\n            throw new Error('Failed to fetch data. Please try again later.');\n            }\n\n        const resultPromise = response.json();\n        const data = await resultPromise;\n        const results = data.results\n      console.log(results.length);\n\n      sessionStorage.setItem('data', JSON.stringify({ results }))\n\n  inputPagination = 0;\n\nfor (let i = 0; i < 8; i++) {\n    inputPagination++;\n}\n\n      exercisePartsList.innerHTML = results.reduce((html, result, inputPagination) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${Math.round(result.rating)}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                    <a class=\"exercise-part-link\" href=\"../partials/pop-up-exersise-card.html\">\n                <button class=\"exercise-part-button\"  id='${inputPagination}'>Start\n                <svg class=\"exercise-btn-icon\" width=\"14\" height=\"14\">\n                <use href=\"/img/icons.svg#icon-arrow-right\"></use>\n                </svg>\n                </button>\n                </a>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name.substring(0, 24) + \"...\"}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n});\n\nconst modal = document.querySelector('.modal123')\nfunction popUp(data) {\n  modal.innerHTML = `\n    <div class=\"pop-backdrop is-open\">\n    <div class=\"pop-ex-modal\">\n      <button class=\"pop-ex-close-btn\">\n        <svg\n          class=\"pop-ex-close-btn-icon\"\n          width=\"24\"\n          height=\"24\"\n          aria-label=\"close icon\"\n        >\n          <use href=\"../img/icons.svg#icon-close\"></use>\n        </svg>\n      </button>\n      <div class=\"pop-exercises-img\">\n        <img\n          src=\"${data.gifUrl}\"\n          class=\"img-ex\"\n          width=\"295\"\n          height=\"258\"\n        />\n      </div>\n\n      <div class=\"pop-ex-content-container\">\n        <h2 class=\"pop-exercise-name\">${data.name}</h2>\n        <ul class=\"pop-ex-stars-list\">\n          <p class=\"pop-ex-current-rating\">${data.rating}</p>\n            <li>\n              <svg\n                class=\"pop-ex-rate-icon\"\n                width=\"18\"\n                height=\"18\"\n                aria-label=\"ratting\">\n                <use href=\"../img/icons.svg#icon-star\"></use>\n              </svg>\n            </li>\n        </ul>\n\n        <hr class=\"decorate-elem\" />\n\n        <div class=\"pop-ex-info\">\n          <div class=\"field\">\n            <span class=\"value\">Target</span>\n            <span class=\"label\">${data.target}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Body Part</span>\n            <span class=\"label\">${data.bodyPart}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Equipment</span>\n            <span class=\"label\">${data.equipment}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Popular</span>\n            <span class=\"label\">${data.popularity}</span>\n          </div>\n          <div class=\"field\">\n            <span class=\"value\">Burned Calories</span>\n            <span class=\"label\">${data.burnedCalories}</span>\n          </div>\n        </div>\n\n        <hr class=\"decorate-elem\" />\n\n        <p class=\"pop-desc-exercise\">\n          ${data.description}\n        </p>\n\n        <div class=\"pop-btns-container\">\n          <button class=\"pop-add-fav\">\n            Add to favorites<svg class=\"heart-icon\" width=\"18\" height=\"18\">\n              <use href=\"../img/icons.svg#icon-heart\"></use>\n            </svg>\n          </button>\n\n          <button class=\"pop-rating-btn\">Give a rating</button>\n        </div>\n      </div>\n    </div>\n  </div>\n`;\n}\n\nlocalStorage.removeItem('exercises')\n\nlet allfav = [];\n\nfunction dataToStorage(data) {\n  const clickHandler = (event) => {\n    console.log(event.target);\n    console.log(popAddFavButton);\n    if (popAddFavButton) {\n      const localData = JSON.parse(localStorage.getItem('exercises')) || [];\n      console.log(123);\n\n      localData.push(data);\n      localStorage.setItem('exercises', JSON.stringify(localData));\n      \n      allfav = [...localData];\n\n      popModal.removeEventListener('click', clickHandler);\n    }else{\n      return\n    }\n  };\n\n  popModal.addEventListener('click', clickHandler);\n}\n\n\n\n\nexercisePartsList.addEventListener('click', async (event) => {\n  \n  event.preventDefault()\n  const currentId = event.target.id\n  \n  const dataStorage = JSON.parse(sessionStorage.getItem('data'))\n\n  if (event.target.tagName != \"BUTTON\") {\n    return\n  }\n  if (currentId == currentId) {\n    const data = dataStorage.results[currentId];\n\n    popUp(data)\n\n    dataToStorage(data)\n  }\n\n  \n\n  popModal.addEventListener('click', (event) => {\n  \n  console.log(event.target);\n  if (event.target.tagName == \"BUTTON\" || \"SVG\" || \"USE\") {\n  \n  if (exPopClose) {\n    modal.innerHTML = ''\n    }\n    }\n  })\n\n\n\n})"],"names":["exerciseList","cardList","pageCounter","exerciseForm","exerciseInputButton","exerciseInput","exercise","exercisePartsList","spanLog","spanTitle","popAddFavButton","exPopClose","popModal","currentPage","searchInput","allResults","limit","currentId","paginationId","inputId","inputPagination","event","results","musclesGroup","i","html","result","error","searchQuery","url","response","elem","targetElement","submitedValue","bodyPart","modal","popUp","data","dataToStorage","clickHandler","localData","dataStorage"],"mappings":"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"}