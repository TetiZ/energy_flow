{"version":3,"file":"exersises-08cbc865.js","sources":["../../src/js/exersises.js"],"sourcesContent":["import { bodyPart, equipment, musclesGroup } from './api.js';\n\nconst exerciseList = document.querySelector('.exercise-cards-list');\nconst cardList = document.querySelector('.exercise-cards-list');\nconst exerciseCards = document.querySelectorAll('.exercise-card');\nconst pageCounter = document.querySelector('.exercise-pages-counter')\nconst exerciseParts = document.querySelector('.exercise-parts')\nconst exerciseForm = document.querySelector('.exercise-form')\nconst exerciseInputButton = document.querySelector('.exercise-input-button')\nconst exerciseInput = document.querySelector('.exercise-input')\nconst exercise = document.querySelectorAll('.exercise-button')\n\n\nlet currentPage ;\nlet searchInput = '';\nlet allResults = [];\nlet limit;\n\nlocalStorage.removeItem('searchInput');\nlocalStorage.removeItem('searchQuery');\n\nexerciseList.addEventListener('click', async (event) => {\n    event.preventDefault();\n    allResults = [];\n    currentPage = 1;\n    cardList.innerHTML = '';\n    try {\n        const data = await musclesGroup(event);\n        const results = data.results;\n\n        allResults = [...results];\n\n        exerciseCards.forEach((card) => {\n            card.style.display = 'none';\n        });\n\n        if (results.length === 0) {\n            throw new Error({\n                title: 'No Results',\n                message: 'No images found. Please try a different search term.',\n            });\n        }\n\n\n        \n\n        cardList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${result.rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n    } catch (error) {\n        console.error('Error:', error);\n    }\n});\n\npageCounter.addEventListener('click', async (event) => {\n    const clickedPage = event.target.textContent;\n    currentPage = clickedPage\n    console.log(currentPage);\n    limit = 8;\n  try {\n        const localSearch = JSON.parse(localStorage.getItem('searchQuery'));\n        const searchQuery = localSearch.searchQuery\n        console.log(searchQuery);\n        const url = `https://energyflow.b.goit.study/api/exercises?muscles=${searchQuery}&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n            \n        if (response.status !== 200) {\n            throw new Error('Failed to fetch data. Please try again later.');\n            }\n\n        const resultPromise = response.json();\n        const data = await resultPromise;\n        const results = data.results\n\n        console.log(results);  \n        \n        cardList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${result.rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    \n});\n\n\n\nexercise.forEach((elem) => {\n    elem.addEventListener('click', (event) => {\n        event.preventDefault();\n        const targetElement = event.target.textContent\n        localStorage.removeItem('searchInput')\n        localStorage.removeItem('searchQuery')\n        if (targetElement === 'Muscles') {\n            exerciseInput.style.display = 'none';\n            exerciseInputButton.style.display = 'none';\n            exerciseCards.forEach((card) => {\n                card.style.display = 'flex';\n            });\n            exerciseParts.forEach((parts) => {\n                parts.style.display = 'none';\n            });\n            \n        } else if (targetElement === 'Body parts') {\n            exerciseInput.style.display = 'flex';\n            exerciseInputButton.style.display = 'flex';\n            exerciseCards.forEach((card) => {\n                card.style.display = 'none';\n            });\n            try {\n            } catch {\n                \n            }\n        }\n    })\n})\n\nexerciseForm.addEventListener('submit', async function(event) {\n    event.preventDefault();\n    allResults = [];\n    currentPage = 1;\n    cardList.innerHTML = '';\n\n    try {\n        const submitedValue = exerciseInput.value\n        const data = await bodyPart(submitedValue)\n        const results = data.results;\n\n        allResults = [...results];\n\n        console.log(results);\n      if (results.length === 0) {\n            throw new Error({\n                title: 'No Results',\n                message: 'No images found. Please try a different search term.',\n            });\n        }\n\n\n        \n\n        cardList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${result.rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n    } catch (error) {\n        console.error('Error:', error);\n    }\n\n});\n\npageCounter.addEventListener('click', async (event) => {\n    try {\n\n        const localSearch = JSON.parse(localStorage.getItem('searchInput'));\n        searchInput = localSearch.searchInput\n        console.log(searchInput);\n        const url = `https://energyflow.b.goit.study/api/exercises?muscles=''&page=${currentPage}&limit=${limit}`;\n        const response = await fetch(url);\n            \n        if (response.status !== 200) {\n            throw new Error('Failed to fetch data. Please try again later.');\n            }\n\n        const resultPromise = response.json();\n        const data = await resultPromise;\n        const results = data.results\n\n        console.log(results);  \n\n        cardList.innerHTML = results.reduce((html, result) => html + `\n        <li class=\"exercise-parts\">\n            <div class=\"part-container\">\n                <div class=\"exercise-head-container\">\n                    <span class=\"exercise-badge\">WORKOUT</span>\n                    <span class=\"exercise-part-rating\">\n                    <p class=\"exercise-rating-number\">${result.rating}</p>\n                    <svg class=\"exercise-rating-icon\" width=\"18\" height=\"18\">\n                        <use href=\"../img/icons.svg#icon-star\"></use>\n                    </svg>\n                    </span>\n                <button class=\"exercise-part-button\">Start</button>\n                </div>\n                <!-- <svg class=\"exercise-btn-icon\">\n                <use href=\"../img/icons.svg#icon-arrow-right\"></use>\n                </svg> -->\n                <span class=\"exercise-part-name\">\n                <svg class=\"exercise-part-icon\" width=\"24\" height=\"24\">\n                    <use href=\"../img/icons.svg#icon-running-man\"></use>\n                </svg>\n                <p class=\"exercise-name-text\">${result.name}</p>\n                </span>\n                <ul class=\"exercise-describes-list\">\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Burned calories:</p>\n                    <p class=\"exercise-describing\">${result.burnedCalories} / ${result.time}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Body part:</p>\n                    <p class=\"exercise-describing\">${result.bodyPart}</p>\n                </li>\n                <li class=\"exercise-describe\">\n                    <p class=\"exercise-describe-category\">Target:</p>\n                    <p class=\"exercise-describing\">${result.target}</p>\n                </li>\n                </ul>\n            </div>\n            </li>\n        `, '');\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    \n});"],"names":["exerciseList","cardList","exerciseCards","pageCounter","exerciseParts","exerciseForm","exerciseInputButton","exerciseInput","exercise","currentPage","searchInput","allResults","limit","event","results","musclesGroup","card","html","result","error","searchQuery","url","response","elem","targetElement","parts","submitedValue","bodyPart"],"mappings":"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"}